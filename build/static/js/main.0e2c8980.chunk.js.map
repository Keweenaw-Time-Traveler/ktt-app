{"version":3,"sources":["components/NavBar/NavBar.module.css","components/Map/Map.module.css","pages/login/login.module.css","pages/signup/signup.module.css","pages/home/home.module.css","components/NavBar/index.js","components/Map/Legend.js","components/Map/index.js","pages/home/index.js","pages/login/index.js","pages/signup/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","className","styles","bar","exact","link","activeClassName","selected","to","Component","Legend","id","clusterWidget","value","clusterButton","legend","WebMapView","mapRef","useRef","useEffect","loadCss","loadModules","css","then","Map","FeatureLayer","MapView","Basemap","VectorTileLayer","Expand","clusterLabelCreator","clusterPopupCreator","promiseUtils","QueryTask","Query","people","queryTask","url","query","returnGeometry","outFields","where","execute","results","console","log","features","executeForCount","layer","title","popupTemplate","content","type","fieldInfos","fieldName","renderer","symbol","size","color","outline","width","map","basemap","baseLayers","portalItem","layers","view","container","current","center","zoom","infoDiv","document","getElementById","isWithinScaleThreshold","scale","ui","add","expandIconClass","expanded","when","popupPromise","getTemplates","popupTemplateResponse","primaryTemplate","labelPromise","getLabelSchemes","labelSchemes","primaryScheme","eachAlways","result","primaryLabelScheme","labelingInfo","clusterMinSize","catch","error","featureReduction","toggleButton","addEventListener","fr","innerText","whenLayerView","layerView","event","newValue","target","whereClause","filter","popup","close","watch","destroy","wrapper","ref","home","login","text","signup","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.0e2c8980.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"NavBar_bar__25Gi7\",\"link\":\"NavBar_link__2Iixg\",\"selected\":\"NavBar_selected__5ZUgm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Map_wrapper__2W8sI\",\"map\":\"Map_map__2bGnQ\",\"clusterWidget\":\"Map_clusterWidget__3yDnq\",\"clusterButton\":\"Map_clusterButton__2CG4g\",\"legend\":\"Map_legend__3AoGH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"login_text__3nYhP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"signup_text__2U_xm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"home_text__37_tL\"};","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from './NavBar.module.css'; // Import css modules stylesheet as styles\n\nexport class NavBar extends Component {\n  render() {\n    return (\n      <nav className={styles.bar}>\n        <NavLink\n          exact\n          className={styles.link}\n          activeClassName={styles.selected}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n        <NavLink\n          exact\n          className={styles.link}\n          activeClassName={styles.selected}\n          to=\"/login\"\n        >\n          Login\n        </NavLink>\n        <NavLink\n          exact\n          className={styles.link}\n          activeClassName={styles.selected}\n          to=\"/signup\"\n        >\n          Signup\n        </NavLink>\n      </nav>\n    );\n  }\n}\n\nexport default NavBar;\n","import React from 'react';\nimport styles from './Map.module.css'; // Import css modules stylesheet as styles\n\nexport const Legend = () => {\n  return (\n    <div id=\"infoDiv\" className={`esri-widget ${styles.clusterWidget}`}>\n      <select id=\"filter\" className=\"esri-select\">\n        <option value=\"\">All</option>\n        <option value=\"1888\">1888</option>\n        <option value=\"1900\">1900</option>\n        <option value=\"1908\">1908</option>\n        <option value=\"1917\">1917</option>\n        <option value=\"1928\">1928</option>\n        <option value=\"1942\">1942</option>\n        <option value=\"1949\">1949</option>\n      </select>\n      <button\n        id=\"toggle-cluster\"\n        className={`esri-button ${styles.clusterButton}`}\n      >\n        Disable Clustering\n      </button>\n      <div id=\"legendDiv\" className={styles.legend}></div>\n    </div>\n  );\n};\n","import React, { useEffect, useRef } from 'react';\nimport { loadCss, loadModules } from 'esri-loader';\nimport axios from 'axios';\nimport styles from './Map.module.css'; // Import css modules stylesheet as styles\n\n//Components\nimport { Legend } from './Legend';\n\nexport const WebMapView = () => {\n  const mapRef = useRef();\n\n  useEffect(() => {\n    // REST api testing\n    // const apiUrl =\n    //   'https://portal1-geo.sabu.mtu.edu:6443/arcgis/rest/services/KeweenawHSDI/KeTT_CityDir/MapServer/0';\n    // axios.get(apiUrl).then((repos) => {\n    //   const allRepos = repos.data;\n    //   console.log(allRepos);\n    // });\n\n    // Map setup\n    loadCss('https://js.arcgis.com/4.17/esri/themes/dark-blue/main.css');\n    // lazy load the required ArcGIS API for JavaScript modules and CSS\n    loadModules(\n      [\n        'esri/Map',\n        'esri/layers/FeatureLayer',\n        'esri/views/MapView',\n        'esri/Basemap',\n        'esri/layers/VectorTileLayer',\n        'esri/widgets/Legend',\n        'esri/widgets/Expand',\n        'esri/smartMapping/labels/clusters',\n        'esri/smartMapping/popup/clusters',\n        'esri/core/promiseUtils',\n        'esri/tasks/QueryTask',\n        'esri/tasks/support/Query',\n      ],\n      { css: true }\n    ).then(\n      ([\n        Map,\n        FeatureLayer,\n        MapView,\n        Basemap,\n        VectorTileLayer,\n        Legend,\n        Expand,\n        clusterLabelCreator,\n        clusterPopupCreator,\n        promiseUtils,\n        QueryTask,\n        Query,\n      ]) => {\n        const stories =\n          'https://portal1-geo.sabu.mtu.edu:6443/arcgis/rest/services/KeweenawHSDI/CCHSDI_StoryPoints_watts/FeatureServer/0';\n        const people =\n          'https://portal1-geo.sabu.mtu.edu:6443/arcgis/rest/services/KeweenawHSDI/KeTT_CityDir/MapServer/0';\n\n        const queryTask = new QueryTask({\n          url: people,\n        });\n        const query = new Query();\n        query.returnGeometry = true;\n        query.outFields = ['*'];\n        query.where = '1 = 1'; // Return all cities with a population greater than 1 million\n\n        // When resolved, returns features and graphics that satisfy the query.\n        queryTask.execute(query).then(function (results) {\n          console.log(results.features);\n        });\n\n        // When resolved, returns a count of the features that satisfy the query.\n        queryTask.executeForCount(query).then(function (results) {\n          console.log(results);\n        });\n\n        const layer = new FeatureLayer({\n          title: 'People',\n          url: people,\n          outFields: ['*'],\n          popupTemplate: {\n            title: '{firstname} {lastname}',\n            content: [\n              {\n                type: 'fields',\n                fieldInfos: [\n                  {\n                    fieldName: 'year',\n                  },\n                  {\n                    fieldName: 'occupation',\n                  },\n                  {\n                    fieldName: 'street_nam',\n                  },\n                ],\n              },\n            ],\n          },\n          renderer: {\n            type: 'simple',\n            symbol: {\n              type: 'simple-marker',\n              size: 4,\n              color: '#69dcff',\n              outline: {\n                color: 'rgba(0, 139, 174, 0.5)',\n                width: 5,\n              },\n            },\n          },\n        });\n\n        var basemap = new Basemap({\n          baseLayers: [\n            new VectorTileLayer({\n              portalItem: {\n                id: 'c11ce4f7801740b2905eb03ddc963ac8', // Dark Gray Canvas\n              },\n            }),\n          ],\n        });\n\n        const map = new Map({\n          basemap: basemap,\n          layers: [layer],\n        });\n\n        //load the map view at the ref's DOM node\n        const view = new MapView({\n          container: mapRef.current,\n          map: map,\n          center: [-88.453743, 47.246247],\n          zoom: 15,\n        });\n\n        const legend = new Legend({\n          view: view,\n          container: 'legendDiv',\n        });\n\n        const infoDiv = document.getElementById('infoDiv');\n        view.ui.add(\n          new Expand({\n            view: view,\n            content: infoDiv,\n            expandIconClass: 'esri-icon-layer-list',\n            expanded: false,\n          }),\n          'top-left'\n        );\n\n        layer\n          .when()\n          .then(generateClusterConfig)\n          .then(function (featureReduction) {\n            layer.featureReduction = featureReduction;\n\n            const toggleButton = document.getElementById('toggle-cluster');\n            toggleButton.addEventListener('click', toggleClustering);\n\n            // To turn off clustering on a layer, set the\n            // featureReduction property to null\n            function toggleClustering() {\n              if (isWithinScaleThreshold()) {\n                let fr = layer.featureReduction;\n                layer.featureReduction =\n                  fr && fr.type === 'cluster' ? null : featureReduction;\n              }\n              toggleButton.innerText =\n                toggleButton.innerText === 'Enable Clustering'\n                  ? 'Disable Clustering'\n                  : 'Enable Clustering';\n            }\n\n            view.whenLayerView(layer).then(function (layerView) {\n              const filterSelect = document.getElementById('filter');\n              // filters the layer using a definitionExpression\n              // based on a year selected by the user\n              filterSelect.addEventListener('change', function (event) {\n                const newValue = event.target.value;\n\n                const whereClause = newValue ? 'year = ' + newValue : null;\n                //layerView.definitionExpression = whereClause;\n                layerView.filter = {\n                  where: whereClause,\n                };\n                // close popup for former cluster that no longer displays\n                view.popup.close();\n              });\n            });\n\n            view.watch('scale', function (scale) {\n              if (toggleButton.innerText === 'Disable Clustering') {\n                layer.featureReduction = isWithinScaleThreshold()\n                  ? featureReduction\n                  : null;\n              }\n            });\n          })\n          .catch(function (error) {\n            console.error(error);\n          });\n\n        function isWithinScaleThreshold() {\n          return view.scale > 4000;\n        }\n\n        function generateClusterConfig(layer) {\n          // generates default popupTemplate\n          const popupPromise = clusterPopupCreator\n            .getTemplates({\n              layer: layer,\n            })\n            .then(function (popupTemplateResponse) {\n              return popupTemplateResponse.primaryTemplate.value;\n            });\n\n          // generates default labelingInfo\n          const labelPromise = clusterLabelCreator\n            .getLabelSchemes({\n              layer: layer,\n              view: view,\n            })\n            .then(function (labelSchemes) {\n              return labelSchemes.primaryScheme;\n            });\n\n          return promiseUtils\n            .eachAlways([popupPromise, labelPromise])\n            .then(function (result) {\n              const popupTemplate = result[0].value;\n\n              const primaryLabelScheme = result[1].value;\n              const labelingInfo = primaryLabelScheme.labelingInfo;\n              // Ensures the clusters are large enough to fit labels\n              const clusterMinSize = primaryLabelScheme.clusterMinSize;\n\n              return {\n                type: 'cluster',\n                popupTemplate: popupTemplate,\n                labelingInfo: labelingInfo,\n                clusterMinSize: clusterMinSize,\n              };\n            })\n            .catch(function (error) {\n              console.error(error);\n            });\n        }\n\n        return () => {\n          if (view) {\n            // destroy the map view\n            view.destroy();\n          }\n        };\n      }\n    );\n  });\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={`webmap ${styles.map}`} ref={mapRef} />\n      <Legend />\n    </div>\n  );\n};\n","import React, { Component } from 'react';\nimport styles from './home.module.css'; // Import css modules stylesheet as styles\n\nimport { WebMapView } from '../../components/Map';\n\nexport class home extends Component {\n  render() {\n    return <WebMapView />;\n  }\n}\n\nexport default home;\n","import React, { Component } from 'react';\nimport styles from './login.module.css'; // Import css modules stylesheet as styles\n\nexport class login extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Login</h1>\n        <p className={styles.text}>\n          Lorem ipsum dolor sit amet, melius torquatos an eos. Commodo adipisci\n          ad ius. Has delectus insolens disputando eu, aeque elitr sed at, eos\n          ei legere eleifend. Eos ei hinc vide, his elit erant at, at ius magna\n          utroque recteque.\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default login;\n","import React, { Component } from 'react';\nimport styles from './signup.module.css'; // Import css modules stylesheet as styles\n\nexport class signup extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Signup</h1>\n        <p className={styles.text}>\n          Lorem ipsum dolor sit amet, melius torquatos an eos. Commodo adipisci\n          ad ius. Has delectus insolens disputando eu, aeque elitr sed at, eos\n          ei legere eleifend. Eos ei hinc vide, his elit erant at, at ius magna\n          utroque recteque.\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default signup;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\n\n//Components\nimport Navbar from './components/NavBar';\n\n//Pages\nimport home from './pages/home';\nimport login from './pages/login';\nimport signup from './pages/signup';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/\" component={home} />\n            <Route exact path=\"/login\" component={login} />\n            <Route exact path=\"/signup\" component={signup} />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}